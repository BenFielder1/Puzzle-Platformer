{"version":3,"file":"static/js/825.0b357201.chunk.js","mappings":"gLAEA,MAEMA,EAAY,MAChBC,WAAAA,CAAYC,GAAS,IAAAC,EAAA,MACnBC,EAAAA,EAAAA,GAAiBC,KAAMH,GAIvBG,KAAKC,YAAa,EAClBD,KAAKE,eAAiB,WAAsB,IAArBC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGN,EAAKK,KACjC,GAAa,OAATA,QAA0BG,IAATH,EAArB,CAEA,QAAsBG,IAAlBH,EAAKI,UAA4C,OAAlBJ,EAAKI,SACtC,MAAM,IAAIC,MAAM,+BAElBL,EAAKM,OAASN,EAAKM,QAAUX,EAAKY,GAClCP,EAAKI,SAAW,IAAII,OAAOC,KAAKT,EALxB,CAMV,CACF,CACAU,YAAAA,CAAaV,GACPH,KAAKC,aAAeD,KAAKc,kBAC3Bd,KAAKE,eAAeC,EAExB,CACAY,YAAAA,CAAaC,EAAeC,GACtBD,IAAkBC,GACpBjB,KAAKE,gBAET,CAIA,iBAAMgB,GACJ,MAAM,SAAEX,GAAaP,KAAKG,MAAQ,CAAC,EACnC,OAAOgB,QAAQC,QAAQb,EACzB,CAIA,aAAMc,GACArB,KAAKc,mBACPd,KAAKG,KAAKI,SAASc,SAAQ,GAC3BrB,KAAKG,KAAKI,SAAW,KAEzB,CACAe,iBAAAA,IACOtB,KAAKc,kBAAoBd,KAAKC,YACjCD,KAAKE,gBAET,CACAqB,oBAAAA,GACEvB,KAAKqB,SACP,CACAP,cAAAA,GACE,OAAQd,KAAKG,WACYG,IAAvBN,KAAKG,KAAKI,UACa,OAAvBP,KAAKG,KAAKI,QACd,CACA,MAAIG,GAAO,OAAOc,EAAAA,EAAAA,GAAWxB,KAAO,CACpC,mBAAWyB,GAAa,MAAO,CAC7B,KAAQ,CAAC,gBACT,WAAc,CAAC,gBACd,GAEL9B,EAAU+B,MAhEW,2B","sources":["../node_modules/@ion-phaser/core/dist/esm/ion-phaser.entry.js"],"sourcesContent":["import { r as registerInstance, g as getElement } from './index-53dab568.js';\n\nconst ionPhaserCss = \"ion-phaser{display:block}\";\n\nconst IonPhaser = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * Initialize the phaser game manually\n     */\n    this.initialize = true;\n    this.initializeGame = (game = this.game) => {\n      if (game === null || game === undefined)\n        return;\n      if (game.instance !== undefined && game.instance !== null) {\n        throw new Error(\"A Phaser game already exist\");\n      }\n      game.parent = game.parent || this.el;\n      game.instance = new Phaser.Game(game);\n    };\n  }\n  onGameChange(game) {\n    if (this.initialize && !this.hasInitialized()) {\n      this.initializeGame(game);\n    }\n  }\n  onInitialize(newInitialize, oldInitialize) {\n    if (newInitialize && !oldInitialize) {\n      this.initializeGame();\n    }\n  }\n  /**\n   * Get the Phaser game instance\n   */\n  async getInstance() {\n    const { instance } = this.game || {};\n    return Promise.resolve(instance);\n  }\n  /**\n   * Destroy the Phaser game instance\n   */\n  async destroy() {\n    if (this.hasInitialized()) {\n      this.game.instance.destroy(true);\n      this.game.instance = null;\n    }\n  }\n  connectedCallback() {\n    if (!this.hasInitialized() && this.initialize) {\n      this.initializeGame();\n    }\n  }\n  disconnectedCallback() {\n    this.destroy();\n  }\n  hasInitialized() {\n    return (this.game &&\n      this.game.instance !== undefined &&\n      this.game.instance !== null);\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"game\": [\"onGameChange\"],\n    \"initialize\": [\"onInitialize\"]\n  }; }\n};\nIonPhaser.style = ionPhaserCss;\n\nexport { IonPhaser as ion_phaser };\n"],"names":["IonPhaser","constructor","hostRef","_this","registerInstance","this","initialize","initializeGame","game","arguments","length","undefined","instance","Error","parent","el","Phaser","Game","onGameChange","hasInitialized","onInitialize","newInitialize","oldInitialize","getInstance","Promise","resolve","destroy","connectedCallback","disconnectedCallback","getElement","watchers","style"],"sourceRoot":""}